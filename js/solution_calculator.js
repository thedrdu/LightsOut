//0 = off, 1 = on

let solutions = {};

//Converts a given board(jagged array) to an integer, where each light is encoded as a bit.
function boardToInt(board){
    let num = 0;
    for(let i = 0; i < 3; i++){
        for(let j = 0; j < 3; j++){
            num = num << 1;
            if(board[i][j]){
                ++num;
            }
        }
    }
    return num;
}

//Converts a given integer to a board(jagged array), where each bit is decoded as a light.
function intToBoard(num){
    let newBoard = [
        [false, false, false],
        [false, false, false],
        [false, false, false]
    ];
    for(let i = 2; i >= 0; i--){
        for(let j = 2; j >= 0; j--){
            newBoard[i][j] = num % 2 === 1;
            num = Math.floor(num / 2);
        }
    }
    return newBoard;
}

//Prints out a given board(jagged array)
function printBoard(board){
    let row = ""
    for(let i = 0; i < board.length; i++) {
        row = "";
        for(let j = 0; j < board[i].length; j++){
            if(board[i][j]){
                row += "1";
            }
            else{
                row += "0";
            }
        }
        console.log(row);
    }
    console.log();
}

//takes in int, converts to binary, returns new board in corresponding state
function getState(state){
    const binary = state.toString(2).padStart(9, '0'); //has to be 9 bits long, pad if needed
    const board = [
        [false, false, false],
        [false, false, false],
        [false, false, false]
    ];
    for(let i = 0; i < 9; i++){
        const row = Math.floor(i / 3);
        const col = i % 3;
        board[row][col] = binary[i] === '1';
    }
    return board;
}

//Checks if a board is solved(all lights are on)
function checkSolved(board){
    for(let i = 0; i < board.length; i++) {
        for(let j = 0; j < board[i].length; j++){
            if(!board[i][j]){return false;}
        }
    }
    return true;
}

//Toggles a light and its neighbors(if existing)
function toggleLight(board, x, y) {
    board[x][y] = !board[x][y];
  
    //left, right, top, bottom
    if(y > 0){board[x][y - 1] = !board[x][y - 1];}
    if(y < board[x].length - 1){board[x][y + 1] = !board[x][y + 1];}
    if(x > 0){board[x - 1][y] = !board[x - 1][y];}
    if(x < board.length - 1){board[x + 1][y] = !board[x + 1][y];}
}

//Note: no need to press any light more than once
function solveBoard(original_board) {
    for(let i = 0; i < 512; i++){
        let board = JSON.parse(JSON.stringify(original_board));
        let clicks_to_make = [...intToBoard(i)];
        for(let j = 0; j < 3; j++){
            for(let k = 0; k < 3; k++){
                if(clicks_to_make[j][k]){
                    toggleLight(board, j, k);
                }
            }
        }
        if(checkSolved(board)){
            return boardToInt(clicks_to_make);
        }
    }
    return -1; //this should never run
}

//main script
for(let state = 0; state < 512; state++){
    console.log(state);
    board = getState(state);
    const solution = solveBoard(board);
    if(solution !== null){
        solutions[state] = solution;
    }
}

console.log(solutions);
const condensedDictionary = JSON.stringify(solutions);
console.log(condensedDictionary);

solution_mapping = {
    '0': 341,
    '1': 432,
    '2': 133,
    '3': 96,
    '4': 216,
    '5': 61,
    '6': 264,
    '7': 493,
    '8': 97,
    '9': 132,
    '10': 433,
    '11': 340,
    '12': 492,
    '13': 265,
    '14': 60,
    '15': 217,
    '16': 495,
    '17': 266,
    '18': 63,
    '19': 218,
    '20': 98,
    '21': 135,
    '22': 434,
    '23': 343,
    '24': 219,
    '25': 62,
    '26': 267,
    '27': 494,
    '28': 342,
    '29': 435,
    '30': 134,
    '31': 99,
    '32': 268,
    '33': 489,
    '34': 220,
    '35': 57,
    '36': 129,
    '37': 100,
    '38': 337,
    '39': 436,
    '40': 56,
    '41': 221,
    '42': 488,
    '43': 269,
    '44': 437,
    '45': 336,
    '46': 101,
    '47': 128,
    '48': 438,
    '49': 339,
    '50': 102,
    '51': 131,
    '52': 59,
    '53': 222,
    '54': 491,
    '55': 270,
    '56': 130,
    '57': 103,
    '58': 338,
    '59': 439,
    '60': 271,
    '61': 490,
    '62': 223,
    '63': 58,
    '64': 54,
    '65': 211,
    '66': 486,
    '67': 259,
    '68': 443,
    '69': 350,
    '70': 107,
    '71': 142,
    '72': 258,
    '73': 487,
    '74': 210,
    '75': 55,
    '76': 143,
    '77': 106,
    '78': 351,
    '79': 442,
    '80': 140,
    '81': 105,
    '82': 348,
    '83': 441,
    '84': 257,
    '85': 484,
    '86': 209,
    '87': 52,
    '88': 440,
    '89': 349,
    '90': 104,
    '91': 141,
    '92': 53,
    '93': 208,
    '94': 485,
    '95': 256,
    '96': 111,
    '97': 138,
    '98': 447,
    '99': 346,
    '100': 482,
    '101': 263,
    '102': 50,
    '103': 215,
    '104': 347,
    '105': 446,
    '106': 139,
    '107': 110,
    '108': 214,
    '109': 51,
    '110': 262,
    '111': 483,
    '112': 213,
    '113': 48,
    '114': 261,
    '115': 480,
    '116': 344,
    '117': 445,
    '118': 136,
    '119': 109,
    '120': 481,
    '121': 260,
    '122': 49,
    '123': 212,
    '124': 108,
    '125': 137,
    '126': 444,
    '127': 345,
    '128': 322,
    '129': 423,
    '130': 146,
    '131': 119,
    '132': 207,
    '133': 42,
    '134': 287,
    '135': 506,
    '136': 118,
    '137': 147,
    '138': 422,
    '139': 323,
    '140': 507,
    '141': 286,
    '142': 43,
    '143': 206,
    '144': 504,
    '145': 285,
    '146': 40,
    '147': 205,
    '148': 117,
    '149': 144,
    '150': 421,
    '151': 320,
    '152': 204,
    '153': 41,
    '154': 284,
    '155': 505,
    '156': 321,
    '157': 420,
    '158': 145,
    '159': 116,
    '160': 283,
    '161': 510,
    '162': 203,
    '163': 46,
    '164': 150,
    '165': 115,
    '166': 326,
    '167': 419,
    '168': 47,
    '169': 202,
    '170': 511,
    '171': 282,
    '172': 418,
    '173': 327,
    '174': 114,
    '175': 151,
    '176': 417,
    '177': 324,
    '178': 113,
    '179': 148,
    '180': 44,
    '181': 201,
    '182': 508,
    '183': 281,
    '184': 149,
    '185': 112,
    '186': 325,
    '187': 416,
    '188': 280,
    '189': 509,
    '190': 200,
    '191': 45,
    '192': 33,
    '193': 196,
    '194': 497,
    '195': 276,
    '196': 428,
    '197': 329,
    '198': 124,
    '199': 153,
    '200': 277,
    '201': 496,
    '202': 197,
    '203': 32,
    '204': 152,
    '205': 125,
    '206': 328,
    '207': 429,
    '208': 155,
    '209': 126,
    '210': 331,
    '211': 430,
    '212': 278,
    '213': 499,
    '214': 198,
    '215': 35,
    '216': 431,
    '217': 330,
    '218': 127,
    '219': 154,
    '220': 34,
    '221': 199,
    '222': 498,
    '223': 279,
    '224': 120,
    '225': 157,
    '226': 424,
    '227': 333,
    '228': 501,
    '229': 272,
    '230': 37,
    '231': 192,
    '232': 332,
    '233': 425,
    '234': 156,
    '235': 121,
    '236': 193,
    '237': 36,
    '238': 273,
    '239': 500,
    '240': 194,
    '241': 39,
    '242': 274,
    '243': 503,
    '244': 335,
    '245': 426,
    '246': 159,
    '247': 122,
    '248': 502,
    '249': 275,
    '250': 38,
    '251': 195,
    '252': 123,
    '253': 158,
    '254': 427,
    '255': 334,
    '256': 27,
    '257': 254,
    '258': 459,
    '259': 302,
    '260': 406,
    '261': 371,
    '262': 70,
    '263': 163,
    '264': 303,
    '265': 458,
    '266': 255,
    '267': 26,
    '268': 162,
    '269': 71,
    '270': 370,
    '271': 407,
    '272': 161,
    '273': 68,
    '274': 369,
    '275': 404,
    '276': 300,
    '277': 457,
    '278': 252,
    '279': 25,
    '280': 405,
    '281': 368,
    '282': 69,
    '283': 160,
    '284': 24,
    '285': 253,
    '286': 456,
    '287': 301,
    '288': 66,
    '289': 167,
    '290': 402,
    '291': 375,
    '292': 463,
    '293': 298,
    '294': 31,
    '295': 250,
    '296': 374,
    '297': 403,
    '298': 166,
    '299': 67,
    '300': 251,
    '301': 30,
    '302': 299,
    '303': 462,
    '304': 248,
    '305': 29,
    '306': 296,
    '307': 461,
    '308': 373,
    '309': 400,
    '310': 165,
    '311': 64,
    '312': 460,
    '313': 297,
    '314': 28,
    '315': 249,
    '316': 65,
    '317': 164,
    '318': 401,
    '319': 372,
    '320': 376,
    '321': 413,
    '322': 168,
    '323': 77,
    '324': 245,
    '325': 16,
    '326': 293,
    '327': 448,
    '328': 76,
    '329': 169,
    '330': 412,
    '331': 377,
    '332': 449,
    '333': 292,
    '334': 17,
    '335': 244,
    '336': 450,
    '337': 295,
    '338': 18,
    '339': 247,
    '340': 79,
    '341': 170,
    '342': 415,
    '343': 378,
    '344': 246,
    '345': 19,
    '346': 294,
    '347': 451,
    '348': 379,
    '349': 414,
    '350': 171,
    '351': 78,
    '352': 289,
    '353': 452,
    '354': 241,
    '355': 20,
    '356': 172,
    '357': 73,
    '358': 380,
    '359': 409,
    '360': 21,
    '361': 240,
    '362': 453,
    '363': 288,
    '364': 408,
    '365': 381,
    '366': 72,
    '367': 173,
    '368': 411,
    '369': 382,
    '370': 75,
    '371': 174,
    '372': 22,
    '373': 243,
    '374': 454,
    '375': 291,
    '376': 175,
    '377': 74,
    '378': 383,
    '379': 410,
    '380': 290,
    '381': 455,
    '382': 242,
    '383': 23,
    '384': 12,
    '385': 233,
    '386': 476,
    '387': 313,
    '388': 385,
    '389': 356,
    '390': 81,
    '391': 180,
    '392': 312,
    '393': 477,
    '394': 232,
    '395': 13,
    '396': 181,
    '397': 80,
    '398': 357,
    '399': 384,
    '400': 182,
    '401': 83,
    '402': 358,
    '403': 387,
    '404': 315,
    '405': 478,
    '406': 235,
    '407': 14,
    '408': 386,
    '409': 359,
    '410': 82,
    '411': 183,
    '412': 15,
    '413': 234,
    '414': 479,
    '415': 314,
    '416': 85,
    '417': 176,
    '418': 389,
    '419': 352,
    '420': 472,
    '421': 317,
    '422': 8,
    '423': 237,
    '424': 353,
    '425': 388,
    '426': 177,
    '427': 84,
    '428': 236,
    '429': 9,
    '430': 316,
    '431': 473,
    '432': 239,
    '433': 10,
    '434': 319,
    '435': 474,
    '436': 354,
    '437': 391,
    '438': 178,
    '439': 87,
    '440': 475,
    '441': 318,
    '442': 11,
    '443': 238,
    '444': 86,
    '445': 179,
    '446': 390,
    '447': 355,
    '448': 367,
    '449': 394,
    '450': 191,
    '451': 90,
    '452': 226,
    '453': 7,
    '454': 306,
    '455': 471,
    '456': 91,
    '457': 190,
    '458': 395,
    '459': 366,
    '460': 470,
    '461': 307,
    '462': 6,
    '463': 227,
    '464': 469,
    '465': 304,
    '466': 5,
    '467': 224,
    '468': 88,
    '469': 189,
    '470': 392,
    '471': 365,
    '472': 225,
    '473': 4,
    '474': 305,
    '475': 468,
    '476': 364,
    '477': 393,
    '478': 188,
    '479': 89,
    '480': 310,
    '481': 467,
    '482': 230,
    '483': 3,
    '484': 187,
    '485': 94,
    '486': 363,
    '487': 398,
    '488': 2,
    '489': 231,
    '490': 466,
    '491': 311,
    '492': 399,
    '493': 362,
    '494': 95,
    '495': 186,
    '496': 396,
    '497': 361,
    '498': 92,
    '499': 185,
    '500': 1,
    '501': 228,
    '502': 465,
    '503': 308,
    '504': 184,
    '505': 93,
    '506': 360,
    '507': 397,
    '508': 309,
    '509': 464,
    '510': 229,
    '511': 0
  }